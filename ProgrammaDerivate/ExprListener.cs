//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ExprParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>DivPer</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivPer([NotNull] ExprParser.DivPerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivPer</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivPer([NotNull] ExprParser.DivPerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Potenza</c>
	/// labeled alternative in <see cref="ExprParser.operazione"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPotenza([NotNull] ExprParser.PotenzaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Potenza</c>
	/// labeled alternative in <see cref="ExprParser.operazione"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPotenza([NotNull] ExprParser.PotenzaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>negativiNumeri</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegativiNumeri([NotNull] ExprParser.NegativiNumeriContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>negativiNumeri</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegativiNumeri([NotNull] ExprParser.NegativiNumeriContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SommaMenointerni</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSommaMenointerni([NotNull] ExprParser.SommaMenointerniContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SommaMenointerni</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSommaMenointerni([NotNull] ExprParser.SommaMenointerniContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] ExprParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] ExprParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parent</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParent([NotNull] ExprParser.ParentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parent</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParent([NotNull] ExprParser.ParentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DivPerinterni</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivPerinterni([NotNull] ExprParser.DivPerinterniContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivPerinterni</c>
	/// labeled alternative in <see cref="ExprParser.numeri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivPerinterni([NotNull] ExprParser.DivPerinterniContext context);
}
