//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ExprParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParentesiEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentesiEspressione([NotNull] ExprParser.ParentesiEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParentesiEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentesiEspressione([NotNull] ExprParser.ParentesiEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MoltiplicazioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoltiplicazioneEspressione([NotNull] ExprParser.MoltiplicazioneEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MoltiplicazioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoltiplicazioneEspressione([NotNull] ExprParser.MoltiplicazioneEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CostanteEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCostanteEspressione([NotNull] ExprParser.CostanteEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CostanteEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCostanteEspressione([NotNull] ExprParser.CostanteEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CasoEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCasoEspressione([NotNull] ExprParser.CasoEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CasoEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCasoEspressione([NotNull] ExprParser.CasoEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RadiceEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRadiceEspressione([NotNull] ExprParser.RadiceEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RadiceEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRadiceEspressione([NotNull] ExprParser.RadiceEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DerivataEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerivataEspressione([NotNull] ExprParser.DerivataEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DerivataEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerivataEspressione([NotNull] ExprParser.DerivataEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DivisioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivisioneEspressione([NotNull] ExprParser.DivisioneEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivisioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivisioneEspressione([NotNull] ExprParser.DivisioneEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PotenzaEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPotenzaEspressione([NotNull] ExprParser.PotenzaEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PotenzaEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPotenzaEspressione([NotNull] ExprParser.PotenzaEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SommaEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSommaEspressione([NotNull] ExprParser.SommaEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SommaEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSommaEspressione([NotNull] ExprParser.SommaEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SottrazioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSottrazioneEspressione([NotNull] ExprParser.SottrazioneEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SottrazioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSottrazioneEspressione([NotNull] ExprParser.SottrazioneEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FunzioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunzioneEspressione([NotNull] ExprParser.FunzioneEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunzioneEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunzioneEspressione([NotNull] ExprParser.FunzioneEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumeroEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeroEspressione([NotNull] ExprParser.NumeroEspressioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumeroEspressione</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeroEspressione([NotNull] ExprParser.NumeroEspressioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Somma</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSomma([NotNull] ExprParser.SommaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Somma</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSomma([NotNull] ExprParser.SommaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Divizione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivizione([NotNull] ExprParser.DivizioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Divizione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivizione([NotNull] ExprParser.DivizioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] ExprParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] ExprParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] ExprParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] ExprParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Sotrazione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSotrazione([NotNull] ExprParser.SotrazioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Sotrazione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSotrazione([NotNull] ExprParser.SotrazioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Moltipicazione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoltipicazione([NotNull] ExprParser.MoltipicazioneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Moltipicazione</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoltipicazione([NotNull] ExprParser.MoltipicazioneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Id</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] ExprParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Id</c>
	/// labeled alternative in <see cref="ExprParser.ss"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] ExprParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.func"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc([NotNull] ExprParser.FuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.func"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc([NotNull] ExprParser.FuncContext context);
}
